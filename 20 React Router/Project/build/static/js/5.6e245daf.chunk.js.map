{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","useHttp","addComment","sendRequest","status","error","commentTextRef","useRef","onAddedComment","useEffect","submitFormHandler","event","preventDefault","enteredComment","current","value","text","className","classes","form","onSubmit","LoadingSpinner","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","HighlightedQuote","quote","author","QuoteDetail","match","useRouteMatch","quoteId","useParams","getSingleQuote","loadedquote","data","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,MAAQ,kC,yIC4CXC,EAtCQ,SAACC,GACtB,MAAuCC,YAAQC,KAAvCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAQC,EAA7B,EAA6BA,MAGvBC,EAAiBC,mBAEfC,EAAmBR,EAAnBQ,eAERC,qBAAU,WACO,cAAXL,GAA2BC,GAC7BG,MAED,CAACJ,EAAQC,EAAOG,IAEnB,IAAME,EAAoB,SAACC,GACzBA,EAAMC,iBACN,IAAMC,EAAiBP,EAAeQ,QAAQC,MAC9CZ,EAAY,CAAEa,KAAMH,KAGtB,OACE,uBAAMI,UAAYC,IAAQC,KAAOC,SAAWV,EAA5C,UACe,YAAXN,GACA,qBAAKa,UAAU,WAAf,SACE,cAACI,EAAA,EAAD,MAGJ,sBAAKJ,UAAYC,IAAQI,QAAUF,SAAWV,EAA9C,UACE,uBAAOa,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAMpB,OAExC,qBAAKW,UAAYC,IAAQS,QAAzB,SACE,wBAAQV,UAAU,MAAlB,+BCbOW,EArBE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,OACE,0BAASd,UAAYC,IAAQc,SAA7B,UACE,gDACGF,GACD,wBAAQb,UAAU,MAAMgB,QARC,WAC7BF,GAAmB,IAOf,2BAIAD,GAAmB,cAAC,EAAD,IACrB,gD,iBCVSI,EATU,SAAClC,GACxB,OACE,yBAAQiB,UAAWC,IAAQiB,MAA3B,UACE,4BAAInC,EAAMgB,OACV,qCAAahB,EAAMoC,aC8CVC,UA3CK,WAChB,IAAMC,EAAQC,cAGNC,EAFOC,cAEPD,QAER,EAA0DvC,YAAQyC,KAAgB,GAA1EvC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcuC,EAAnC,EAA6BC,KAAmBvC,EAAhD,EAAgDA,MAMhD,OAJAI,qBAAU,WACNN,EAAYqC,KACb,CAACrC,EAAaqC,IAEF,YAAXpC,EACO,qBAAKa,UAAU,WAAf,SACH,cAACI,EAAA,EAAD,MAIJhB,EACO,qBAAKY,UAAU,WAAf,SACH,4BAAKZ,MAIRsC,EAAY3B,KAKb,eAAC,WAAD,WACI,cAAC,EAAD,CAAkBA,KAAO2B,EAAY3B,KAAOoB,OAASO,EAAYP,SACjE,cAAC,IAAD,CAAOS,KAAI,UAAMP,EAAMO,MAASC,OAAK,EAArC,SACI,qBAAK7B,UAAU,WAAf,SACI,cAAC,IAAD,CAAMA,UAAU,YAAY8B,GAAE,UAAMT,EAAMU,IAAZ,aAA9B,+BAGR,cAAC,IAAD,CAAOH,KAAI,UAAMP,EAAMO,KAAZ,aAAX,SACI,cAAC,EAAD,SAZD","file":"static/js/5.6e245daf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__X2XMI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__qUDwa\",\"loading\":\"NewCommentForm_loading__1UWfU\",\"control\":\"NewCommentForm_control__1v79N\",\"actions\":\"NewCommentForm_actions__75GGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__1qf8F\"};","import { useEffect, useRef } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../lib/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const { sendRequest, status, error } = useHttp(addComment);\n\n\n  const commentTextRef = useRef();\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment])\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredComment = commentTextRef.current.value;\n    sendRequest({ text: enteredComment, })\n  };\n\n  return (\n    <form className={ classes.form } onSubmit={ submitFormHandler }>\n      { status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner></LoadingSpinner>\n        </div>\n      ) }\n      <div className={ classes.control } onSubmit={ submitFormHandler }>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={ commentTextRef }></textarea>\n      </div>\n      <div className={ classes.actions }>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  return (\n    <section className={ classes.comments }>\n      <h2>User Comments</h2>\n      { !isAddingComment && (\n        <button className='btn' onClick={ startAddCommentHandler }>\n          Add a Comment\n        </button>\n      ) }\n      { isAddingComment && <NewCommentForm /> }\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from 'react';\r\nimport { Link, Route, useParams, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\n\r\n\r\nconst QuoteDetail = () => {\r\n    const match = useRouteMatch();\r\n    const params = useParams();\r\n\r\n    const { quoteId } = params;\r\n\r\n    const { sendRequest, status, data: loadedquote, error } = useHttp(getSingleQuote, true);\r\n\r\n    useEffect(() => {\r\n        sendRequest(quoteId);\r\n    }, [sendRequest, quoteId])\r\n\r\n    if (status === 'pending') {\r\n        return <div className='centered'>\r\n            <LoadingSpinner></LoadingSpinner>\r\n        </div>\r\n    }\r\n\r\n    if (error) {\r\n        return <div className='centered'>\r\n            <p>{ error }</p>\r\n        </div>\r\n    }\r\n\r\n    if (!loadedquote.text) {\r\n        return <p>Quote not found</p>\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <HighlightedQuote text={ loadedquote.text } author={ loadedquote.author }></HighlightedQuote>\r\n            <Route path={ `${match.path}` } exact>\r\n                <div className='centered'>\r\n                    <Link className='btn--flat' to={ `${match.url}/comments` } >Load Comments</Link>\r\n                </div>\r\n            </Route>\r\n            <Route path={ `${match.path}/comments` } >\r\n                <Comments></Comments>\r\n            </Route>\r\n        </Fragment >\r\n    )\r\n};\r\n\r\nexport default QuoteDetail;"],"sourceRoot":""}