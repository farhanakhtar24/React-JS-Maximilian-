{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuote","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBC6D/BC,EAzDG,SAACL,GACjB,MAAoCM,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CACEE,KAAOL,EACPM,QAAU,SAACC,GACT,MAAO,4EAEX,cAAC,EAAD,UACE,uBAAMC,QAZa,WACvBP,GAAc,IAWyBP,UAAYC,IAAQc,KAAOC,SA3BpE,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBX,EAAeY,QAAQC,MACvCC,EAAcZ,EAAaU,QAAQC,MAIzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAmB5C,UACIvB,EAAM2B,WACN,qBAAK1B,UAAYC,IAAQ0B,QAAzB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAYC,IAAQ4B,QAAzB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAMzB,OAEvC,sBAAKR,UAAYC,IAAQ4B,QAAzB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAMvB,OAErC,qBAAKV,UAAYC,IAAQkC,QAAzB,SACE,wBAAQC,QAhCY,WAC5B7B,GAAc,IA+BoCP,UAAU,MAApD,kC,gBChCGqC,UAlBE,WACb,MAAgCC,YAAQC,KAAhCC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OACfC,EAAUC,cAEhBC,qBAAU,WACS,cAAXH,GACAC,EAAQG,KAAK,aAElB,CAACJ,EAAQC,IAKZ,OACI,cAAC,EAAD,CAAWhB,UAAuB,YAAXe,EAAuBlB,WAJ1B,SAAUuB,GAC9BN,EAAYM","file":"static/js/6.dfb0d38f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__2x7RA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__rtbcc\",\"loading\":\"QuoteForm_loading__1g6E4\",\"control\":\"QuoteForm_control__3V9Nx\",\"actions\":\"QuoteForm_actions__1Nn7-\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const finishEnteringHandler = function () {\n    setIsEntering(false);\n  }\n\n  const formFocusHandler = () => {\n    setIsEntering(true);\n  }\n\n  return (\n    <Fragment>\n      <Prompt\n        when={ isEntering }\n        message={ (location) => {\n          return \"Are you sure you want to leave? You will lose your quote if you leave.\"\n        } } />\n      <Card>\n        <form onFocus={ formFocusHandler } className={ classes.form } onSubmit={ submitFormHandler }>\n          { props.isLoading && (\n            <div className={ classes.loading }>\n              <LoadingSpinner />\n            </div>\n          ) }\n\n          <div className={ classes.control }>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={ authorInputRef } />\n          </div>\n          <div className={ classes.control }>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={ textInputRef }></textarea>\n          </div>\n          <div className={ classes.actions }>\n            <button onClick={ finishEnteringHandler } className='btn'>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nconst NewQuote = () => {\r\n    const { sendRequest, status } = useHttp(addQuote);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (status === 'completed') {\r\n            history.push('/quotes');\r\n        }\r\n    }, [status, history]);\r\n\r\n    const addQuoteHandler = function (quoteData) {\r\n        sendRequest(quoteData);\r\n    }\r\n    return (\r\n        <QuoteForm isLoading={ status === 'pending' } onAddQuote={ addQuoteHandler }></QuoteForm>\r\n    )\r\n};\r\n\r\nexport default NewQuote;"],"sourceRoot":""}