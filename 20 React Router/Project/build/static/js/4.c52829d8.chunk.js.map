{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","match","useRouteMatch","isSortingAcending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","path","list","map","quote","NoQuotesFound","noquotes","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedquotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCgBdC,EAdG,SAACC,GACjB,OACE,qBAAIC,UAAYC,IAAQC,KAAxB,UACE,mCACE,qCACE,4BAAKH,EAAMI,SAEb,qCAAcJ,EAAMK,YAEtB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAcN,EAAMO,GAApB,aAAxB,iC,iBCuCSC,EAnCG,SAACR,GACjB,IAX2BS,EAAQC,EAW7BC,EAAUC,cACVC,EAAWC,cACXC,EAAQC,cAGRC,EAA+C,QADlC,IAAIC,gBAAgBL,EAASM,QACXC,IAAI,QACnCC,GAjBqBZ,EAiBKT,EAAMS,OAjBHC,EAiBWO,EAhBvCR,EAAOa,MAAK,SAACC,EAAQC,GAC1B,OAAId,EACKa,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,EAE7BgB,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAK,MAqBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAYC,IAAQuB,QAAzB,SACE,yBAAQC,QAVe,WAC3Bf,EAAQgB,KAAK,CACXC,SAAUb,EAAMc,KAChBV,OAAO,SAAD,OAAWF,EAAoB,OAAS,UAO5C,kBAAgDA,EAAoB,aAAe,iBAErF,oBAAIhB,UAAYC,IAAQ4B,KAAxB,SACIT,EAAaU,KAAI,SAACC,GAAD,OACjB,cAAC,EAAD,CAEEzB,GAAKyB,EAAMzB,GACXF,OAAS2B,EAAM3B,OACfD,KAAO4B,EAAM5B,MAHP4B,EAAMzB,a,yCC1BT0B,EAXO,WACpB,OACE,sBAAKhC,UAAYC,IAAQgC,SAAzB,UACE,iDACA,cAAC,IAAD,CAAMjC,UAAU,MAAMK,GAAG,aAAzB,6BCoCS6B,UApCG,WAEd,MAA2DC,YAAQC,KAAc,GAAzEC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,OAAcC,EAAnC,EAA6BC,KAAoBC,EAAjD,EAAiDA,MAKjD,OAJAC,qBAAU,WACNL,MACD,CAACA,IAEW,YAAXC,EAEI,qBAAKtC,UAAU,WAAf,SACI,cAAC2C,EAAA,EAAD,MAKRF,EAEI,qBAAKzC,UAAU,WAAf,SACI,4BAAKyC,MAKF,cAAXH,GAA4BC,GAAwC,IAAxBA,EAAaK,OAOzD,cAAC,WAAD,UACI,cAAC,EAAD,CAAWpC,OAAS+B,MANpB,cAAC,EAAD","file":"static/js/4.c52829d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2RRXq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__15VY4\",\"sorting\":\"QuoteList_sorting__3fIRd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2_Ore\"};","import { Link } from 'react-router-dom';\nimport classes from './QuoteItem.module.css';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={ classes.item }>\n      <figure>\n        <blockquote>\n          <p>{ props.text }</p>\n        </blockquote>\n        <figcaption>{ props.author }</figcaption>\n      </figure>\n      <Link className='btn' to={ `/quotes/${props.id}/comments` }>View Fullscreen</Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation, useRouteMatch } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = function (quotes, ascending) {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const match = useRouteMatch();\n\n  const queryParam = new URLSearchParams(location.search);\n  const isSortingAcending = queryParam.get('sort') === 'asc';\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAcending);\n\n  const changeSortingHandler = function () {\n    history.push({\n      pathname: match.path,\n      search: `?sort=${isSortingAcending ? 'desc' : 'asc'}`\n    });\n  };\n\n  return (\n    <Fragment>\n      <div className={ classes.sorting }>\n        <button onClick={ changeSortingHandler }>Sort { isSortingAcending ? 'Descending' : 'Ascending' }</button>\n      </div>\n      <ul className={ classes.list }>\n        { sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={ quote.id }\n            id={ quote.id }\n            author={ quote.author }\n            text={ quote.text }\n          />\n        )) }\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={ classes.noquotes }>\n      <p>No quotes found!</p>\n      <Link className='btn' to='/new-quote'>\n        Add a quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { Fragment, useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nconst AllQuotes = () => {\r\n\r\n    const { sendRequest, status, data: loadedquotes, error } = useHttp(getAllQuotes, true);\r\n    useEffect(() => {\r\n        sendRequest();\r\n    }, [sendRequest]);\r\n\r\n    if (status === 'pending') {\r\n        return (\r\n            <div className='centered'>\r\n                <LoadingSpinner></LoadingSpinner>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (error) {\r\n        return (\r\n            <div className='centered'>\r\n                <p>{ error }</p>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    if (status === 'completed' && (!loadedquotes || loadedquotes.length === 0)) {\r\n        return (\r\n            <NoQuotesFound></NoQuotesFound>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Fragment>\r\n            <QuoteList quotes={ loadedquotes }></QuoteList>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default AllQuotes;"],"sourceRoot":""}